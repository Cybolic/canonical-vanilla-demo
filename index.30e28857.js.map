{"mappings":"AAGA,MAqCMA,EAAiB,CACrBC,GAAI,EACJC,KAAM,GACNC,KAAM,WAGFC,EAAU,CAACH,EAAYI,EAAkBC,KAC7C,MAGMC,EAHeD,EAASE,UAAU,WAAWC,MAChDC,GAAUA,EAAMC,QAAUD,EAAM,GAAGL,WAAaA,KAExBI,MAAMG,GAAiBA,EAAaX,KAAOA,IACtE,OAAOM,CAAA,EA+BIM,EAAWC,UACtB,MAAMC,QAAiBC,MA/EvB,wEA2FA,aAXyBD,EAASE,QAE/BC,KAAKC,GAhCiB,CAACC,IAC1B,MAAMC,EACJD,EAASZ,UAAUc,OAAOb,MACvBc,GAAmBA,EAAetB,KAAOmB,EAASE,UAChDtB,EACDwB,EAAepB,EAAQgB,EAASK,WAAW,GAAI,WAAYL,GAK3DM,EAAYtB,EAAQgB,EAASO,MAAM,GAAI,QAASP,GAEtD,MAAO,CACLE,OAAQ,CACNrB,GAAImB,EAASE,OACbpB,KAAMmB,EAAWnB,KACjBC,KAAMkB,EAAWlB,MAEnByB,KAAM,IAAIC,KAAKT,EAASQ,MACxBE,QAASV,EAASU,QAAQC,SAC1B7B,KAAMkB,EAASlB,K,aACfsB,E,UACAE,EACAM,UAAWZ,EAASa,eACpBC,MAAOd,EAASc,MAAMH,SACxB,EAO2BI,CAAmBhB,KAC3CiB,MAAK,CAACC,EAAGC,KACR,MAAMF,EAAOE,EAAEV,KAAKW,UAAYF,EAAET,KAAKW,UACvC,OAAa,IAATH,EACKE,EAAEJ,MAAMM,cAAcH,EAAEH,OAExBE,CAAA,GAGN,EC1EIK,EAAgB,CAC3BC,EACAC,EACAC,KAEA,GAAY,OAARF,EACF,OAAOG,SAASC,eAAeH,EAAMI,MAAQ,IAG/C,MAAMC,EAAsC,GACtCC,EAAUJ,SAASK,cAAcR,GAOvC,QALmBS,IAAfR,EAAMI,OACRE,EAAQG,YAAcT,EAAMI,YACrBJ,EAAMI,WAGQI,IAAnBR,EAAMK,SAAwB,CAChC,IAAK,MAAMK,KAASV,EAAMK,SAAU,CAClC,IAAIM,EACJ,GAAID,aAAiBE,aAAeF,aAAiBG,KACnDF,EAAeD,MACV,KAAII,MAAMC,QAAQL,GAGlB,CACLM,QAAQC,KAAK,0BAA2BP,GACxC,QACF,CANiC,CAC/B,MAAOQ,EAAUC,GAAcT,EAC/BC,EAAeb,EAAcoB,EAAUC,EACzC,CAGA,CAEAd,EAASe,KAAKT,EAChB,CAEA,IAAK,MAAMD,KAASL,EAClBC,EAAQe,YAAYX,UAGfV,EAAMK,QACf,CAEA,IAAK,MAAOiB,EAAUC,KAAUC,OAAOC,QAAQzB,GAE5CM,EAAgBgB,GAAiCC,EAOpD,YAJef,IAAXP,GACFA,EAAOoB,YAAYf,GAGdA,CAAA,ECtEIoB,EAAS,CAACzC,EAAY0C,KACjC,MAAMC,EAAO,IAAIC,KAAKC,eAAe,KAAM,CAAEF,KAAM,YAAaG,OAAO9C,GACjE+C,EAAQ,IAAIH,KAAKC,eAAe,KAAM,CAAEE,MAAO,SAAUD,OAAO9C,GAChEgD,EAAM,IAAIJ,KAAKC,eAAe,KAAM,CAAEG,IAAK,YAAaF,OAAO9C,GAErE,OAAO0C,EACJO,QAAQ,KAAMN,GACdM,QAAQ,KAAMF,GACdE,QAAQ,KAAMD,EAAA,ECLbE,EAAiB,CAACC,EAAgB7E,IACtCuC,EAAc,IAAK,CACjBO,SAAU,CACR,CACE,MACA,CACEgC,UAAW,yCACXC,IAAKF,KAIXC,UACE,2EACFE,KAAMhF,IAGJiF,EAAiB,CAACjD,EAAehC,IACrCuC,EAAc,KAAM,CAClBO,SAAU,CAAC,CAAC,IAAK,CAAEkC,KAAMhF,EAAM6C,KAAMb,KACrC8C,UACE,sGAGAI,EAAkB,CAACjF,EAAcD,EAAc0B,IACnDa,EAAc,UAAW,CACvBO,SAAU,CACR,CAAC,KAAM,CAAED,KAAM,QACf,CAAC,IAAK,CAAEmC,KAAMhF,EAAM6C,KAAM5C,IAC1B,CAAC,KAAM,CAAE4C,KAAM,SACf,CACE,OACA,CACEsC,SAAUzD,EAAK0D,cACfvC,KAAMsB,EAAWzC,EAAM,eAI7BoD,UAAW,iEAGFO,EAAmB,EAACrF,KAC/BA,EAAI0B,KACJA,EAAIM,MACJA,EAAKF,UACLA,EAASwD,WACTA,EAAUC,WACVA,KASAhD,EAAc,IAAK,CACjBO,SAAU,CACR8B,EAAe9C,EAAW9B,GAC1BiF,EAAejD,EAAOhC,GACtBkF,EAAgBI,EAAYC,EAAY7D,IAE1CoD,UAAW,kCC7DfnC,SAAS6C,iBAAiB,oBAAoB5E,UAC5C,MAAM6E,EAAgB9C,SAAS+C,cAAc,UACvCC,QAAkBhF,IACxB,IAAK,MAAMM,KAAQ0E,EACjBF,GAAe3B,aCLa8B,SCAAnE,SC0Bbc,EAAc,UAAW,CACxCO,SAAU,ED3BkBrB,GCyBDoE,EHpBe5E,GGuBnBO,WAAWvB,MAAQ,mBD3B5CsC,EAAc,SAAU,CACtBuC,UACE,mFACFjC,KAAMpB,KCyBJ4D,EAAiB,CACfE,WAAYM,EAAKzE,OAAOpB,KACxBsF,WAAYO,EAAKzE,OAAOnB,KACxByB,KAAMmE,EAAKnE,KACX1B,KAAM6F,EAAK7F,KACX8B,UAAW+D,EAAK/D,UAChBE,MAAO6D,EAAK7D,SFnCY4D,EEsCI,aAA5BC,EAAKvE,cAAcrB,KAAsB,UAAY,OFrC3DsC,EAAc,SAAU,CACtBuC,UAAW,gEACXjC,KAAM+C,MEsCNd,UAAW,qCAhBe,IAACe,EFzBCD,ECAAnE,CFKc","sources":["src/js/blog-posts.ts","src/js/lib/dom.ts","src/js/lib/date.ts","src/js/components/post-card-content.ts","src/js/index.ts","src/js/components/post-card-footer.ts","src/js/components/post-card-header.ts","src/js/components/post-card.ts"],"sourcesContent":["import { type PostCard } from './components/post-card';\nimport { type WP_REST_API_Posts } from 'wp-types';\n\nconst URL_POSTS =\n  'https://people.canonical.com/~anthonydillon/wp-json/wp/v2/posts.json';\n\n// Tweak the official type to match the actual response type\ntype PostJson = Omit<WP_REST_API_Posts[0], 'featured_media'> & {\n  _embedded: {\n    author: Array<{\n      [other: string]: unknown;\n      id: number;\n      link: string;\n      name: string;\n    }>;\n    'wp:term': Array<\n      Array<{\n        id: number;\n        link: string;\n        name: string;\n        taxonomy: string;\n      }>\n    >;\n  };\n  author: number;\n  categories: number[];\n  date: string;\n  excerpt: {\n    rendered: string;\n  };\n  featured_media: string;\n  link: string;\n  title: {\n    rendered: string;\n  };\n  topic: number[];\n};\n\n// NOTE: We could have fallback values for everything, but in this controlled\n// demo, we know that the data is consistent enough to not need them.\nconst fallbackAuthor = {\n  id: 0,\n  link: '',\n  name: 'Unknown',\n};\n\nconst getTerm = (id: number, taxonomy: string, postJson: PostJson) => {\n  const matchedTypes = postJson._embedded['wp:term'].find(\n    (terms) => terms.length && terms[0].taxonomy === taxonomy,\n  );\n  const term = matchedTypes?.find((possibleTerm) => possibleTerm.id === id);\n  return term;\n};\n\nconst postToPostCardData = (postData: PostJson): PostCard => {\n  const mainAuthor =\n    postData._embedded.author.find(\n      (possibleAuthor) => possibleAuthor.id === postData.author,\n    ) ?? fallbackAuthor;\n  const mainCategory = getTerm(postData.categories[0], 'category', postData);\n  // NOTE: The example screenshot shows \"CLOUD AND SERVER\" as the main header,\n  // but that's only used in _one_ of the example posts, and only as one of\n  // three `group` values.\n  // Instead I'm using the more consistent `topic` data for the header.\n  const mainTopic = getTerm(postData.topic[0], 'topic', postData);\n\n  return {\n    author: {\n      id: postData.author,\n      link: mainAuthor.link,\n      name: mainAuthor.name,\n    },\n    date: new Date(postData.date),\n    excerpt: postData.excerpt.rendered,\n    link: postData.link,\n    mainCategory,\n    mainTopic,\n    thumbnail: postData.featured_media,\n    title: postData.title.rendered,\n  };\n};\n\nexport const getPosts = async (): Promise<PostCard[]> => {\n  const response = await fetch(URL_POSTS);\n  const postsData = (await response.json()) as PostJson[];\n  const posts = postsData\n    .map((post: PostJson) => postToPostCardData(post))\n    .sort((a, b) => {\n      const sort = b.date.getTime() - a.date.getTime();\n      if (sort === 0) {\n        return b.title.localeCompare(a.title);\n      } else {\n        return sort;\n      }\n    });\n  return posts;\n};\n","// Since we're using the vanilla CSS framework, let's also use a vanilla JS (TS) framework\n\ntype TagName = string | null;\ntype Element = HTMLElement | Text;\n\ntype CreateElementProps = {\n  [property: string]: unknown;\n  children?: Array<Element | [tag: TagName, props: CreateElementProps]>;\n  className?: string;\n  text?: string;\n};\n\ntype CreateElementReturn<T> = T extends string\n  ? HTMLElement\n  : T extends null\n  ? Text\n  : never;\n\n// Create an element, and append it to the target if given.\n// Supports nested elements through `children`. They can either be an array of\n// `createElement` arguments or a DOM element.\nexport const createElement = <T extends TagName>(\n  tag: T,\n  props: CreateElementProps,\n  target?: HTMLElement,\n): CreateElementReturn<T> => {\n  if (tag === null) {\n    return document.createTextNode(props.text || '') as CreateElementReturn<T>;\n  }\n\n  const children: Array<HTMLElement | Text> = [];\n  const element = document.createElement(tag as unknown as string);\n\n  if (props.text !== undefined) {\n    element.textContent = props.text;\n    delete props.text;\n  }\n\n  if (props.children !== undefined) {\n    for (const child of props.children) {\n      let childElement: HTMLElement | Text;\n      if (child instanceof HTMLElement || child instanceof Text) {\n        childElement = child;\n      } else if (Array.isArray(child)) {\n        const [childTag, childProps] = child;\n        childElement = createElement(childTag, childProps);\n      } else {\n        console.warn('Invalid child. Ignored:', child);\n        continue;\n      }\n\n      children.push(childElement);\n    }\n\n    for (const child of children) {\n      element.appendChild(child);\n    }\n\n    delete props.children;\n  }\n\n  for (const [property, value] of Object.entries(props)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (element as any)[property as keyof HTMLElement] = value;\n  }\n\n  if (target !== undefined) {\n    target.appendChild(element);\n  }\n\n  return element as CreateElementReturn<T>;\n};\n","export const format = (date: Date, formatString: string): string => {\n  const year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\n  const month = new Intl.DateTimeFormat('en', { month: 'long' }).format(date);\n  const day = new Intl.DateTimeFormat('en', { day: 'numeric' }).format(date);\n  // Note: the following is a naive implementation of a format string\n  return formatString\n    .replace('%Y', year)\n    .replace('%B', month)\n    .replace('%d', day);\n};\n","import { format as formatDate } from '../lib/date';\nimport { createElement } from '../lib/dom';\n\nconst ImageComponent = (source: string, link: string) =>\n  createElement('a', {\n    children: [\n      [\n        'img',\n        {\n          className: 'card__image p-card__image u-no-padding',\n          src: source,\n        },\n      ],\n    ],\n    className:\n      'card__image-wrapper p-card__inner u-no-padding--top u-no-padding--bottom',\n    href: link,\n  });\n\nconst TitleComponent = (title: string, link: string) =>\n  createElement('h2', {\n    children: [['a', { href: link, text: title }]],\n    className:\n      'card__title p-card__inner p-heading--4 u-no-margin--bottom u-no-padding--top u-no-padding--bottom',\n  });\n\nconst AuthorComponent = (name: string, link: string, date: Date) =>\n  createElement('address', {\n    children: [\n      [null, { text: 'By ' }],\n      ['a', { href: link, text: name }],\n      [null, { text: ' on ' }],\n      [\n        'time',\n        {\n          datetime: date.toISOString(),\n          text: formatDate(date, '%d %B %Y'),\n        },\n      ],\n    ],\n    className: 'card__author p-card__inner u-no-margin--bottom p-text--small',\n  });\n\nexport const ContentComponent = ({\n  link,\n  date,\n  title,\n  thumbnail,\n  authorName,\n  authorLink,\n}: {\n  authorLink: string;\n  authorName: string;\n  date: Date;\n  link: string;\n  thumbnail: string;\n  title: string;\n}) =>\n  createElement('p', {\n    children: [\n      ImageComponent(thumbnail, link),\n      TitleComponent(title, link),\n      AuthorComponent(authorName, authorLink, date),\n    ],\n    className: 'card__content p-card__content',\n  });\n","import * as blog from './blog-posts';\nimport { createPostCard } from './components/post-card';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const targetElement = document.querySelector('#posts');\n  const blogPosts = await blog.getPosts();\n  for (const post of blogPosts) {\n    targetElement?.appendChild(createPostCard(post));\n  }\n});\n","import { createElement } from '../lib/dom';\n\nexport const FooterComponent = (category: string) =>\n  createElement('footer', {\n    className: 'card__footer p-card__inner u-no-padding--bottom p-text--small',\n    text: category,\n  });\n","import { createElement } from '../lib/dom';\n\nexport const HeaderComponent = (topic: string) =>\n  createElement('header', {\n    className:\n      'card__header p-card__inner u-no-margin p-text--x-small-capitalised u-text--muted',\n    text: topic,\n  });\n","import { createElement } from '../lib/dom';\nimport { ContentComponent } from './post-card-content';\nimport { FooterComponent } from './post-card-footer';\nimport { HeaderComponent } from './post-card-header';\n\ntype LinkedTerm = {\n  id: number;\n  name: string;\n};\n\ntype Author = {\n  id: number;\n  link: string;\n  name: string;\n};\n\nexport type PostCard = {\n  author: Author;\n  date: Date;\n  excerpt: string;\n  link: string;\n  mainCategory?: LinkedTerm;\n  mainTopic?: LinkedTerm;\n  thumbnail: string;\n  title: string;\n};\n\nexport const createPostCard = (data: PostCard) => {\n  const postCard = createElement('section', {\n    children: [\n      HeaderComponent(data.mainTopic?.name ?? 'Cloud and Server'),\n      ContentComponent({\n        authorLink: data.author.link,\n        authorName: data.author.name,\n        date: data.date,\n        link: data.link,\n        thumbnail: data.thumbnail,\n        title: data.title,\n      }),\n      FooterComponent(\n        data.mainCategory?.name === 'Articles' ? 'Article' : 'Post',\n      ),\n    ],\n    className: 'card col-4 p-card u-no-padding',\n  });\n\n  return postCard;\n};\n"],"names":["$345b99671e055df5$var$fallbackAuthor","id","link","name","$345b99671e055df5$var$getTerm","taxonomy","postJson","term","_embedded","find","terms","length","possibleTerm","$345b99671e055df5$export$3790dc04c854c4c9","async","response","fetch","json","map","post","postData","mainAuthor","author","possibleAuthor","mainCategory","categories","mainTopic","topic","date","Date","excerpt","rendered","thumbnail","featured_media","title","$345b99671e055df5$var$postToPostCardData","sort","a","b","getTime","localeCompare","$99770909f2fbefac$export$c8a8987d4410bf2d","tag","props","target","document","createTextNode","text","children","element","createElement","undefined","textContent","child","childElement","HTMLElement","Text","Array","isArray","console","warn","childTag","childProps","push","appendChild","property","value","Object","entries","$5a2b596c6d86447c$export$d9468344d3651243","formatString","year","Intl","DateTimeFormat","format","month","day","replace","$d7987d4af7bab192$var$ImageComponent","source","className","src","href","$d7987d4af7bab192$var$TitleComponent","$d7987d4af7bab192$var$AuthorComponent","datetime","toISOString","$d7987d4af7bab192$export$2dda1e4a1d1f6a81","authorName","authorLink","addEventListener","targetElement","querySelector","blogPosts","category","data"],"version":3,"file":"index.30e28857.js.map"}